(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('angular-file-validator', ['exports', '@angular/core', 'rxjs'], factory) :
    (global = global || self, factory(global['angular-file-validator'] = {}, global.ng.core, global.rxjs));
}(this, (function (exports, core, rxjs) { 'use strict';

    var FileCheck = /** @class */ (function () {
        function FileCheck() {
        }
        FileCheck.ngFileValidator = function (allowedType) {
            if (allowedType === void 0) { allowedType = []; }
            var x = 10 + 1;
            return function (control) {
                if (typeof (control.value) === 'string') {
                    return rxjs.of(null);
                }
                if (allowedType.length < 1) {
                    return rxjs.of({ invalidMimeType: true });
                }
                if (allowedType.indexOf('jpg') !== -1) {
                    var fileTypeIndex = allowedType.indexOf('jpg');
                    allowedType[fileTypeIndex] = 'jpeg';
                }
                var file = control.value;
                var fileReader = new FileReader();
                var fileTye = '';
                var frObs = rxjs.Observable.create(function (observer) {
                    fileReader.addEventListener("loadend", function () {
                        var arr = new Uint8Array(fileReader.result).subarray(0, 4);
                        var header = "";
                        for (var i = 0; i < arr.length; i++) {
                            header += arr[i].toString(16);
                        }
                        switch (header) {
                            case "89504e47": //   type = "image/png";
                                fileTye = 'png';
                                break;
                            case "ffd8ffe0":
                            case "ffd8ffe1":
                            case "ffd8ffe2":
                            case "ffd8ffe3":
                            case "ffd8ffe8":
                                fileTye = 'jpeg'; //   type = "image/jpeg";
                                break;
                            case "47494638":
                                fileTye = 'gif'; //   type = "image/gif";
                                break;
                            default:
                                fileTye = 'others'; // Or you can use the blob.type as fallback
                                break;
                        }
                        if (allowedType.includes(fileTye)) {
                            observer.next(null);
                        }
                        else {
                            observer.next({ invalidMimeType: true });
                        }
                        observer.complete();
                    });
                    fileReader.readAsArrayBuffer(file);
                });
                return frObs;
            };
        };
        return FileCheck;
    }());
    FileCheck.decorators = [
        { type: core.Injectable }
    ];

    var NgFileValidatorLibModule = /** @class */ (function () {
        function NgFileValidatorLibModule() {
        }
        return NgFileValidatorLibModule;
    }());
    NgFileValidatorLibModule.decorators = [
        { type: core.NgModule, args: [{
                    providers: [FileCheck]
                },] }
    ];

    /*
     * Public API Surface of ng-file-validator-lib
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.FileCheck = FileCheck;
    exports.NgFileValidatorLibModule = NgFileValidatorLibModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=angular-file-validator.umd.js.map
